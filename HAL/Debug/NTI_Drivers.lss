
NTI_Drivers.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002e2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         0000060c  00000000  00000000  00000338  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000644  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 6f 01 	jmp	0x2de	; 0x2de <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
 *      Author: lenovo
 */

#include "../DIO/Dio.h"
int main()
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <main+0x6>
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62
    DIO_PrephieralType* port = ( DIO_PrephieralType*)0x39;
  76:	89 e3       	ldi	r24, 0x39	; 57
  78:	90 e0       	ldi	r25, 0x00	; 0
  7a:	9a 83       	std	Y+2, r25	; 0x02
  7c:	89 83       	std	Y+1, r24	; 0x01

    while(1)
    {
    	DIO_SetPinDirection(port, DIO_PIN6, DIO_DIRECTION_OUTPUT);
  7e:	89 81       	ldd	r24, Y+1	; 0x01
  80:	9a 81       	ldd	r25, Y+2	; 0x02
  82:	66 e0       	ldi	r22, 0x06	; 6
  84:	40 e0       	ldi	r20, 0x00	; 0
  86:	0e 94 4c 00 	call	0x98	; 0x98 <DIO_SetPinDirection>
        DIO_SetPinValue(port, DIO_PIN6, DIO_VALUE_HIGH);
  8a:	89 81       	ldd	r24, Y+1	; 0x01
  8c:	9a 81       	ldd	r25, Y+2	; 0x02
  8e:	66 e0       	ldi	r22, 0x06	; 6
  90:	41 e0       	ldi	r20, 0x01	; 1
  92:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <DIO_SetPinValue>
  96:	f3 cf       	rjmp	.-26     	; 0x7e <main+0x12>

00000098 <DIO_SetPinDirection>:

#include "Dio.h"
#include "Dio_Cfg.h"

void DIO_SetPinDirection(DIO_PrephieralType* port, DIO_PinType pin, DIO_DirectionType direction)
{
  98:	df 93       	push	r29
  9a:	cf 93       	push	r28
  9c:	00 d0       	rcall	.+0      	; 0x9e <DIO_SetPinDirection+0x6>
  9e:	00 d0       	rcall	.+0      	; 0xa0 <DIO_SetPinDirection+0x8>
  a0:	00 d0       	rcall	.+0      	; 0xa2 <DIO_SetPinDirection+0xa>
  a2:	cd b7       	in	r28, 0x3d	; 61
  a4:	de b7       	in	r29, 0x3e	; 62
  a6:	9a 83       	std	Y+2, r25	; 0x02
  a8:	89 83       	std	Y+1, r24	; 0x01
  aa:	6b 83       	std	Y+3, r22	; 0x03
  ac:	4c 83       	std	Y+4, r20	; 0x04
    switch (pin)
  ae:	8b 81       	ldd	r24, Y+3	; 0x03
  b0:	28 2f       	mov	r18, r24
  b2:	30 e0       	ldi	r19, 0x00	; 0
  b4:	3e 83       	std	Y+6, r19	; 0x06
  b6:	2d 83       	std	Y+5, r18	; 0x05
  b8:	8d 81       	ldd	r24, Y+5	; 0x05
  ba:	9e 81       	ldd	r25, Y+6	; 0x06
  bc:	83 30       	cpi	r24, 0x03	; 3
  be:	91 05       	cpc	r25, r1
  c0:	09 f4       	brne	.+2      	; 0xc4 <DIO_SetPinDirection+0x2c>
  c2:	90 c0       	rjmp	.+288    	; 0x1e4 <DIO_SetPinDirection+0x14c>
  c4:	2d 81       	ldd	r18, Y+5	; 0x05
  c6:	3e 81       	ldd	r19, Y+6	; 0x06
  c8:	24 30       	cpi	r18, 0x04	; 4
  ca:	31 05       	cpc	r19, r1
  cc:	8c f4       	brge	.+34     	; 0xf0 <DIO_SetPinDirection+0x58>
  ce:	8d 81       	ldd	r24, Y+5	; 0x05
  d0:	9e 81       	ldd	r25, Y+6	; 0x06
  d2:	81 30       	cpi	r24, 0x01	; 1
  d4:	91 05       	cpc	r25, r1
  d6:	09 f4       	brne	.+2      	; 0xda <DIO_SetPinDirection+0x42>
  d8:	85 c0       	rjmp	.+266    	; 0x1e4 <DIO_SetPinDirection+0x14c>
  da:	2d 81       	ldd	r18, Y+5	; 0x05
  dc:	3e 81       	ldd	r19, Y+6	; 0x06
  de:	22 30       	cpi	r18, 0x02	; 2
  e0:	31 05       	cpc	r19, r1
  e2:	0c f0       	brlt	.+2      	; 0xe6 <DIO_SetPinDirection+0x4e>
  e4:	7f c0       	rjmp	.+254    	; 0x1e4 <DIO_SetPinDirection+0x14c>
  e6:	8d 81       	ldd	r24, Y+5	; 0x05
  e8:	9e 81       	ldd	r25, Y+6	; 0x06
  ea:	00 97       	sbiw	r24, 0x00	; 0
  ec:	99 f0       	breq	.+38     	; 0x114 <DIO_SetPinDirection+0x7c>
  ee:	7a c0       	rjmp	.+244    	; 0x1e4 <DIO_SetPinDirection+0x14c>
  f0:	2d 81       	ldd	r18, Y+5	; 0x05
  f2:	3e 81       	ldd	r19, Y+6	; 0x06
  f4:	25 30       	cpi	r18, 0x05	; 5
  f6:	31 05       	cpc	r19, r1
  f8:	09 f4       	brne	.+2      	; 0xfc <DIO_SetPinDirection+0x64>
  fa:	74 c0       	rjmp	.+232    	; 0x1e4 <DIO_SetPinDirection+0x14c>
  fc:	8d 81       	ldd	r24, Y+5	; 0x05
  fe:	9e 81       	ldd	r25, Y+6	; 0x06
 100:	85 30       	cpi	r24, 0x05	; 5
 102:	91 05       	cpc	r25, r1
 104:	0c f4       	brge	.+2      	; 0x108 <DIO_SetPinDirection+0x70>
 106:	6e c0       	rjmp	.+220    	; 0x1e4 <DIO_SetPinDirection+0x14c>
 108:	2d 81       	ldd	r18, Y+5	; 0x05
 10a:	3e 81       	ldd	r19, Y+6	; 0x06
 10c:	26 30       	cpi	r18, 0x06	; 6
 10e:	31 05       	cpc	r19, r1
 110:	b1 f1       	breq	.+108    	; 0x17e <DIO_SetPinDirection+0xe6>
 112:	68 c0       	rjmp	.+208    	; 0x1e4 <DIO_SetPinDirection+0x14c>
    {
    case DIO_PIN0:
    if(DIO_DIRECTION_OUTPUT == direction)
 114:	8c 81       	ldd	r24, Y+4	; 0x04
 116:	88 23       	and	r24, r24
 118:	49 f4       	brne	.+18     	; 0x12c <DIO_SetPinDirection+0x94>
    {
        port->ddr->BIT.B0 = 1;
 11a:	e9 81       	ldd	r30, Y+1	; 0x01
 11c:	fa 81       	ldd	r31, Y+2	; 0x02
 11e:	02 80       	ldd	r0, Z+2	; 0x02
 120:	f3 81       	ldd	r31, Z+3	; 0x03
 122:	e0 2d       	mov	r30, r0
 124:	80 81       	ld	r24, Z
 126:	81 60       	ori	r24, 0x01	; 1
 128:	80 83       	st	Z, r24
 12a:	5c c0       	rjmp	.+184    	; 0x1e4 <DIO_SetPinDirection+0x14c>
    }
    else if(DIO_DIRECTION_INPUT_FLOATING == direction)
 12c:	8c 81       	ldd	r24, Y+4	; 0x04
 12e:	81 30       	cpi	r24, 0x01	; 1
 130:	89 f4       	brne	.+34     	; 0x154 <DIO_SetPinDirection+0xbc>
    {
        port->ddr->BIT.B0 = 0;
 132:	e9 81       	ldd	r30, Y+1	; 0x01
 134:	fa 81       	ldd	r31, Y+2	; 0x02
 136:	02 80       	ldd	r0, Z+2	; 0x02
 138:	f3 81       	ldd	r31, Z+3	; 0x03
 13a:	e0 2d       	mov	r30, r0
 13c:	80 81       	ld	r24, Z
 13e:	8e 7f       	andi	r24, 0xFE	; 254
 140:	80 83       	st	Z, r24
        port->port->BIT.B0 = 0; 
 142:	e9 81       	ldd	r30, Y+1	; 0x01
 144:	fa 81       	ldd	r31, Y+2	; 0x02
 146:	04 80       	ldd	r0, Z+4	; 0x04
 148:	f5 81       	ldd	r31, Z+5	; 0x05
 14a:	e0 2d       	mov	r30, r0
 14c:	80 81       	ld	r24, Z
 14e:	8e 7f       	andi	r24, 0xFE	; 254
 150:	80 83       	st	Z, r24
 152:	48 c0       	rjmp	.+144    	; 0x1e4 <DIO_SetPinDirection+0x14c>
    }
    else if(DIO_DIRECTION_INPUT_PULLUP == direction)
 154:	8c 81       	ldd	r24, Y+4	; 0x04
 156:	82 30       	cpi	r24, 0x02	; 2
 158:	09 f0       	breq	.+2      	; 0x15c <DIO_SetPinDirection+0xc4>
 15a:	44 c0       	rjmp	.+136    	; 0x1e4 <DIO_SetPinDirection+0x14c>
    {
        port->ddr->BIT.B0 = 0;
 15c:	e9 81       	ldd	r30, Y+1	; 0x01
 15e:	fa 81       	ldd	r31, Y+2	; 0x02
 160:	02 80       	ldd	r0, Z+2	; 0x02
 162:	f3 81       	ldd	r31, Z+3	; 0x03
 164:	e0 2d       	mov	r30, r0
 166:	80 81       	ld	r24, Z
 168:	8e 7f       	andi	r24, 0xFE	; 254
 16a:	80 83       	st	Z, r24
        port->port->BIT.B0 = 1;
 16c:	e9 81       	ldd	r30, Y+1	; 0x01
 16e:	fa 81       	ldd	r31, Y+2	; 0x02
 170:	04 80       	ldd	r0, Z+4	; 0x04
 172:	f5 81       	ldd	r31, Z+5	; 0x05
 174:	e0 2d       	mov	r30, r0
 176:	80 81       	ld	r24, Z
 178:	81 60       	ori	r24, 0x01	; 1
 17a:	80 83       	st	Z, r24
 17c:	33 c0       	rjmp	.+102    	; 0x1e4 <DIO_SetPinDirection+0x14c>
    case DIO_PIN5:
    /*complete code*/
        break;
    
    case DIO_PIN6:
    if(DIO_DIRECTION_OUTPUT == direction)
 17e:	8c 81       	ldd	r24, Y+4	; 0x04
 180:	88 23       	and	r24, r24
 182:	49 f4       	brne	.+18     	; 0x196 <DIO_SetPinDirection+0xfe>
    {
        port->ddr->BIT.B6 = 1;
 184:	e9 81       	ldd	r30, Y+1	; 0x01
 186:	fa 81       	ldd	r31, Y+2	; 0x02
 188:	02 80       	ldd	r0, Z+2	; 0x02
 18a:	f3 81       	ldd	r31, Z+3	; 0x03
 18c:	e0 2d       	mov	r30, r0
 18e:	80 81       	ld	r24, Z
 190:	80 64       	ori	r24, 0x40	; 64
 192:	80 83       	st	Z, r24
 194:	27 c0       	rjmp	.+78     	; 0x1e4 <DIO_SetPinDirection+0x14c>
    }
    else if(DIO_DIRECTION_INPUT_FLOATING == direction)
 196:	8c 81       	ldd	r24, Y+4	; 0x04
 198:	81 30       	cpi	r24, 0x01	; 1
 19a:	89 f4       	brne	.+34     	; 0x1be <DIO_SetPinDirection+0x126>
    {
        port->ddr->BIT.B6 = 0;
 19c:	e9 81       	ldd	r30, Y+1	; 0x01
 19e:	fa 81       	ldd	r31, Y+2	; 0x02
 1a0:	02 80       	ldd	r0, Z+2	; 0x02
 1a2:	f3 81       	ldd	r31, Z+3	; 0x03
 1a4:	e0 2d       	mov	r30, r0
 1a6:	80 81       	ld	r24, Z
 1a8:	8f 7b       	andi	r24, 0xBF	; 191
 1aa:	80 83       	st	Z, r24
        port->port->BIT.B6 = 0; 
 1ac:	e9 81       	ldd	r30, Y+1	; 0x01
 1ae:	fa 81       	ldd	r31, Y+2	; 0x02
 1b0:	04 80       	ldd	r0, Z+4	; 0x04
 1b2:	f5 81       	ldd	r31, Z+5	; 0x05
 1b4:	e0 2d       	mov	r30, r0
 1b6:	80 81       	ld	r24, Z
 1b8:	8f 7b       	andi	r24, 0xBF	; 191
 1ba:	80 83       	st	Z, r24
 1bc:	13 c0       	rjmp	.+38     	; 0x1e4 <DIO_SetPinDirection+0x14c>
    }
    else if(DIO_DIRECTION_INPUT_PULLUP == direction)
 1be:	8c 81       	ldd	r24, Y+4	; 0x04
 1c0:	82 30       	cpi	r24, 0x02	; 2
 1c2:	81 f4       	brne	.+32     	; 0x1e4 <DIO_SetPinDirection+0x14c>
    {
        port->ddr->BIT.B6 = 0;
 1c4:	e9 81       	ldd	r30, Y+1	; 0x01
 1c6:	fa 81       	ldd	r31, Y+2	; 0x02
 1c8:	02 80       	ldd	r0, Z+2	; 0x02
 1ca:	f3 81       	ldd	r31, Z+3	; 0x03
 1cc:	e0 2d       	mov	r30, r0
 1ce:	80 81       	ld	r24, Z
 1d0:	8f 7b       	andi	r24, 0xBF	; 191
 1d2:	80 83       	st	Z, r24
        port->port->BIT.B6 = 1;
 1d4:	e9 81       	ldd	r30, Y+1	; 0x01
 1d6:	fa 81       	ldd	r31, Y+2	; 0x02
 1d8:	04 80       	ldd	r0, Z+4	; 0x04
 1da:	f5 81       	ldd	r31, Z+5	; 0x05
 1dc:	e0 2d       	mov	r30, r0
 1de:	80 81       	ld	r24, Z
 1e0:	80 64       	ori	r24, 0x40	; 64
 1e2:	80 83       	st	Z, r24
        break;
    
    default:
        break;
    }
}
 1e4:	26 96       	adiw	r28, 0x06	; 6
 1e6:	0f b6       	in	r0, 0x3f	; 63
 1e8:	f8 94       	cli
 1ea:	de bf       	out	0x3e, r29	; 62
 1ec:	0f be       	out	0x3f, r0	; 63
 1ee:	cd bf       	out	0x3d, r28	; 61
 1f0:	cf 91       	pop	r28
 1f2:	df 91       	pop	r29
 1f4:	08 95       	ret

000001f6 <DIO_SetPinValue>:

void DIO_SetPinValue(DIO_PrephieralType* port, DIO_PinType pin, DIO_ValueType value)
{
 1f6:	df 93       	push	r29
 1f8:	cf 93       	push	r28
 1fa:	00 d0       	rcall	.+0      	; 0x1fc <DIO_SetPinValue+0x6>
 1fc:	00 d0       	rcall	.+0      	; 0x1fe <DIO_SetPinValue+0x8>
 1fe:	00 d0       	rcall	.+0      	; 0x200 <DIO_SetPinValue+0xa>
 200:	cd b7       	in	r28, 0x3d	; 61
 202:	de b7       	in	r29, 0x3e	; 62
 204:	9a 83       	std	Y+2, r25	; 0x02
 206:	89 83       	std	Y+1, r24	; 0x01
 208:	6b 83       	std	Y+3, r22	; 0x03
 20a:	4c 83       	std	Y+4, r20	; 0x04
    switch (pin)
 20c:	8b 81       	ldd	r24, Y+3	; 0x03
 20e:	28 2f       	mov	r18, r24
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	3e 83       	std	Y+6, r19	; 0x06
 214:	2d 83       	std	Y+5, r18	; 0x05
 216:	8d 81       	ldd	r24, Y+5	; 0x05
 218:	9e 81       	ldd	r25, Y+6	; 0x06
 21a:	83 30       	cpi	r24, 0x03	; 3
 21c:	91 05       	cpc	r25, r1
 21e:	09 f4       	brne	.+2      	; 0x222 <DIO_SetPinValue+0x2c>
 220:	55 c0       	rjmp	.+170    	; 0x2cc <DIO_SetPinValue+0xd6>
 222:	2d 81       	ldd	r18, Y+5	; 0x05
 224:	3e 81       	ldd	r19, Y+6	; 0x06
 226:	24 30       	cpi	r18, 0x04	; 4
 228:	31 05       	cpc	r19, r1
 22a:	8c f4       	brge	.+34     	; 0x24e <DIO_SetPinValue+0x58>
 22c:	8d 81       	ldd	r24, Y+5	; 0x05
 22e:	9e 81       	ldd	r25, Y+6	; 0x06
 230:	81 30       	cpi	r24, 0x01	; 1
 232:	91 05       	cpc	r25, r1
 234:	09 f4       	brne	.+2      	; 0x238 <DIO_SetPinValue+0x42>
 236:	4a c0       	rjmp	.+148    	; 0x2cc <DIO_SetPinValue+0xd6>
 238:	2d 81       	ldd	r18, Y+5	; 0x05
 23a:	3e 81       	ldd	r19, Y+6	; 0x06
 23c:	22 30       	cpi	r18, 0x02	; 2
 23e:	31 05       	cpc	r19, r1
 240:	0c f0       	brlt	.+2      	; 0x244 <DIO_SetPinValue+0x4e>
 242:	44 c0       	rjmp	.+136    	; 0x2cc <DIO_SetPinValue+0xd6>
 244:	8d 81       	ldd	r24, Y+5	; 0x05
 246:	9e 81       	ldd	r25, Y+6	; 0x06
 248:	00 97       	sbiw	r24, 0x00	; 0
 24a:	89 f0       	breq	.+34     	; 0x26e <DIO_SetPinValue+0x78>
 24c:	3f c0       	rjmp	.+126    	; 0x2cc <DIO_SetPinValue+0xd6>
 24e:	2d 81       	ldd	r18, Y+5	; 0x05
 250:	3e 81       	ldd	r19, Y+6	; 0x06
 252:	25 30       	cpi	r18, 0x05	; 5
 254:	31 05       	cpc	r19, r1
 256:	d1 f1       	breq	.+116    	; 0x2cc <DIO_SetPinValue+0xd6>
 258:	8d 81       	ldd	r24, Y+5	; 0x05
 25a:	9e 81       	ldd	r25, Y+6	; 0x06
 25c:	85 30       	cpi	r24, 0x05	; 5
 25e:	91 05       	cpc	r25, r1
 260:	ac f1       	brlt	.+106    	; 0x2cc <DIO_SetPinValue+0xd6>
 262:	2d 81       	ldd	r18, Y+5	; 0x05
 264:	3e 81       	ldd	r19, Y+6	; 0x06
 266:	26 30       	cpi	r18, 0x06	; 6
 268:	31 05       	cpc	r19, r1
 26a:	c9 f0       	breq	.+50     	; 0x29e <DIO_SetPinValue+0xa8>
 26c:	2f c0       	rjmp	.+94     	; 0x2cc <DIO_SetPinValue+0xd6>
    {
    case DIO_PIN0:
    if(DIO_VALUE_HIGH == value)
 26e:	8c 81       	ldd	r24, Y+4	; 0x04
 270:	81 30       	cpi	r24, 0x01	; 1
 272:	49 f4       	brne	.+18     	; 0x286 <DIO_SetPinValue+0x90>
    {
        port->port->BIT.B0 = 1;
 274:	e9 81       	ldd	r30, Y+1	; 0x01
 276:	fa 81       	ldd	r31, Y+2	; 0x02
 278:	04 80       	ldd	r0, Z+4	; 0x04
 27a:	f5 81       	ldd	r31, Z+5	; 0x05
 27c:	e0 2d       	mov	r30, r0
 27e:	80 81       	ld	r24, Z
 280:	81 60       	ori	r24, 0x01	; 1
 282:	80 83       	st	Z, r24
 284:	23 c0       	rjmp	.+70     	; 0x2cc <DIO_SetPinValue+0xd6>
    }
    else if(DIO_VALUE_LOW == value)
 286:	8c 81       	ldd	r24, Y+4	; 0x04
 288:	88 23       	and	r24, r24
 28a:	01 f5       	brne	.+64     	; 0x2cc <DIO_SetPinValue+0xd6>
    {
        port->port->BIT.B0 = 1;
 28c:	e9 81       	ldd	r30, Y+1	; 0x01
 28e:	fa 81       	ldd	r31, Y+2	; 0x02
 290:	04 80       	ldd	r0, Z+4	; 0x04
 292:	f5 81       	ldd	r31, Z+5	; 0x05
 294:	e0 2d       	mov	r30, r0
 296:	80 81       	ld	r24, Z
 298:	81 60       	ori	r24, 0x01	; 1
 29a:	80 83       	st	Z, r24
 29c:	17 c0       	rjmp	.+46     	; 0x2cc <DIO_SetPinValue+0xd6>
    case DIO_PIN5:
    /*Complete Code*/
        break;
    
    case DIO_PIN6:
    if(DIO_VALUE_HIGH == value)
 29e:	8c 81       	ldd	r24, Y+4	; 0x04
 2a0:	81 30       	cpi	r24, 0x01	; 1
 2a2:	49 f4       	brne	.+18     	; 0x2b6 <DIO_SetPinValue+0xc0>
    {
        port->port->BIT.B6 = 1;
 2a4:	e9 81       	ldd	r30, Y+1	; 0x01
 2a6:	fa 81       	ldd	r31, Y+2	; 0x02
 2a8:	04 80       	ldd	r0, Z+4	; 0x04
 2aa:	f5 81       	ldd	r31, Z+5	; 0x05
 2ac:	e0 2d       	mov	r30, r0
 2ae:	80 81       	ld	r24, Z
 2b0:	80 64       	ori	r24, 0x40	; 64
 2b2:	80 83       	st	Z, r24
 2b4:	0b c0       	rjmp	.+22     	; 0x2cc <DIO_SetPinValue+0xd6>
    }
    else if(DIO_VALUE_LOW == value)
 2b6:	8c 81       	ldd	r24, Y+4	; 0x04
 2b8:	88 23       	and	r24, r24
 2ba:	41 f4       	brne	.+16     	; 0x2cc <DIO_SetPinValue+0xd6>
    {
        port->port->BIT.B6 = 1;
 2bc:	e9 81       	ldd	r30, Y+1	; 0x01
 2be:	fa 81       	ldd	r31, Y+2	; 0x02
 2c0:	04 80       	ldd	r0, Z+4	; 0x04
 2c2:	f5 81       	ldd	r31, Z+5	; 0x05
 2c4:	e0 2d       	mov	r30, r0
 2c6:	80 81       	ld	r24, Z
 2c8:	80 64       	ori	r24, 0x40	; 64
 2ca:	80 83       	st	Z, r24
    
    default:
        break;
    }

}
 2cc:	26 96       	adiw	r28, 0x06	; 6
 2ce:	0f b6       	in	r0, 0x3f	; 63
 2d0:	f8 94       	cli
 2d2:	de bf       	out	0x3e, r29	; 62
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	cd bf       	out	0x3d, r28	; 61
 2d8:	cf 91       	pop	r28
 2da:	df 91       	pop	r29
 2dc:	08 95       	ret

000002de <_exit>:
 2de:	f8 94       	cli

000002e0 <__stop_program>:
 2e0:	ff cf       	rjmp	.-2      	; 0x2e0 <__stop_program>
